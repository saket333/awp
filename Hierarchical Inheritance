Program.cs
using HeirarchicalInheritance;
using System;
namespace HeirarchicalInheritance
{
class Program
{
static void Main(string[] args)
{
Programmerr objProgrammerr;
Manager objManager;
Console.Write("Whose details you want to use to see \n1.Programmer \n2.Manager");
int choice=int.Parse(Console.ReadLine());
if(choice==1)
{
objProgrammerr=new Programmerr();
objProgrammerr.display();
}
else if(choice==2)
{
objManager=new Manager();
objManager.display();
}
else
{
Console.WriteLine("Wrong choice entered");
} } } }


Manager.cs
using System;
namespace HeirarchicalInheritance
{
class Manager
{
public void display()
{
Console.WriteLine("Display of manager class called ");
} } }


Employee.cs
using System;
namespace HeirarchicalInheritance
{
class Employee
{
public virtual void display()
{
Console.WriteLine("Display of employee class called ");
} } }


Programmerr.cs
using System;
namespace HeirarchicalInheritance
{
class Programmerr:Employee
{
public void display()
{
Console.WriteLine(" Display of Programmer class called ");
} } }
